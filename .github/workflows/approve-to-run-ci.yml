name: Meshery-Operator CI

on:
  pull_request:
    branches: [master]
    types: [review_requested, review_request_removed, opened, reopened, synchronize]
  issue_comment:
    types: [created]

jobs:
  check_lgtm:
    runs-on: ubuntu-latest
    outputs:
      has_lgtm: ${{ steps.check_lgtm.outputs.has_lgtm }}
    steps:
      - name: Check if LGTM exists
        id: check_lgtm
        run: |
          pr_number=${{ github.event.pull_request.number }}
          if [ -z "$pr_number" ]; then
            pr_number=${{ github.event.issue.number }}
          fi
          comments=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments")
          has_lgtm=$(echo "$comments" | jq '.[] | select(.body | contains("LGTM"))')
          if [ -z "$has_lgtm" ]; then
            echo "::set-output name=has_lgtm::false"
          else
            echo "::set-output name=has_lgtm::true"
          fi
  golangci-lint:
    strategy:
      matrix:
        platform: [ubuntu-22.04]
        go-version: [1.19.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  codecov:
    needs: golangci-lint
    name: Code Coverage
    runs-on: ubuntu-22.04
    steps:
      - name: Debug
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Pull Request Body: ${{ github.event.pull_request.body }}"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
      - name: Run unit tests
        run: go test --short ./... -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt
          flags: unittests

  build:
    name: Build on LGTM
    needs: [codecov,golangci-lint,check_lgtm]
    if: ${{ steps.check_lgtm.outputs.has_lgtm == 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x
      - name: Build
        run: make build

